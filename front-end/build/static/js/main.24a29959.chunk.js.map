{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","el","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","name","Item","onClick","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","HomeScreen","props","page","pages","useEffect","a","axios","get","data","response","message","i","key","sm","ms","xl","ProductScreen","history","match","useState","qty","setQty","disptch","params","console","log","md","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","x","Button","push","disabled","addToCart","getState","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","Authorization","token","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","isAdmin","deliverOrder","App","path","component","exact","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.24a29959.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : []\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload.products }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(el => el.product === item.product)\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(el => el.product === existItem.product ? item : el)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(el => el.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import axios from 'axios'\r\nimport {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        console.log(data)\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        console.log(data)\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo }, } = getState()\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        console.log(userInfo)\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\n// import SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    //console.log(userInfo)\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand >Proshop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                  </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link>\r\n                                            <i className='fas fa-user'></i> Sign In\r\n                                        </Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    // console.log(value)\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\" >\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    {/* <div className=\"my-3\">\r\n                        {product.rating} from {product.numReviews} reviews\r\n                    </div> */}\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\n// import products from '../products';\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, products, error, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    // console.log('list', products)\r\n\r\n    return (\r\n        <>\r\n            <h1>Products</h1>\r\n            {loading ? <Loader /> : error ? <Message variant='danger' >{error}</Message> : <Row>\r\n                {products.map((el, i) => (\r\n                    <Col key={el._id} sm={12} ms={6} xl={3}>\r\n                        <Product product={el} />\r\n                    </Col>\r\n                ))}\r\n            </Row>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/products')\r\n\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL, payload: error.response && error.response.data.message ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        console.log(data)\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport { listProductDetails } from '../actions/productActions'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const disptch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, product, error } = productDetails\r\n\r\n    useEffect(() => {\r\n        disptch(listProductDetails(match.params.id))\r\n    }, [disptch, match])\r\n\r\n    // const product = products.find(p => p._id === match.params.id)\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n    console.log(productDetails)\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger' >{error}</Message> : (\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h3>{product.name}</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating\r\n                                    value={product.rating}\r\n                                    text={`${product.numReviews} reviews`}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description: {product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Price:</Col>\r\n                                        <Col>\r\n                                            <strong>${product.price}</strong>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Status:</Col>\r\n                                        <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Qty</Col>\r\n                                            <Col>\r\n                                                <Form.Control\r\n                                                    as='select'\r\n                                                    value={qty}\r\n                                                    onChange={(e) => setQty(e.target.value)}\r\n                                                >\r\n                                                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        onClick={addToCartHandler}\r\n                                        className='btn-block'\r\n                                        type='button'\r\n                                        disabled={product.countInStock === 0}\r\n                                    >\r\n                                        Add To Cart\r\n                                            </Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    console.log(cartItems)\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your Cart is empty <Link to='/'>Go Back</Link></Message> : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((el, i) => (\r\n                            <ListGroup.Item key={el.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={el.image} alt={el.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Link to={`/product/${el.product}`}>{el.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${el.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as='select'\r\n                                            value={el.qty}\r\n                                            onChange={(e) =>\r\n                                                dispatch(\r\n                                                    addToCart(el.product, Number(e.target.value))\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {[...Array(el.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(el.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, el) => acc + el.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, el) => acc + el.qty * el.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign in</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                 </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    console.log(redirect)\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n          </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n            </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='name'\r\n                                        placeholder='Enter name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type='email'\r\n                                        placeholder='Enter email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='password'>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type='password'\r\n                                        placeholder='Enter password'\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='confirmPassword'>\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type='password'\r\n                                        placeholder='Confirm password'\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update\r\n                                </Button>\r\n                            </Form>\r\n                        )}\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>DATE</th>\r\n                                        <th>TOTAL</th>\r\n                                        <th>PAID</th>\r\n                                        <th>DELIVERED</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {orders.map((order) => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>{order.totalPrice}</td>\r\n                                            <td>\r\n                                                {order.isPaid ? (\r\n                                                    order.paidAt.substring(0, 10)\r\n                                                ) : (\r\n                                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                    )}\r\n                                            </td>\r\n                                            <td>\r\n                                                {order.isDelivered ? (\r\n                                                    order.deliveredAt.substring(0, 10)\r\n                                                ) : (\r\n                                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                    )}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm' variant='light'>\r\n                                                        Details\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        console.log(order)\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Sign In</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                        {/* <Form.Check\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                            ></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, el) => acc + el.price * el.qty, 0)\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n    console.log(success)\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        console.log('cart', cart)\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((el, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image\r\n                                                            src={el.image}\r\n                                                            alt={el.name}\r\n                                                            fluid\r\n                                                            rounded\r\n                                                        />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${el.product}`}>\r\n                                                            {el.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {el.qty} x ${el.price} = ${el.qty * el.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger' >{error}</Message>\r\n        : <>\r\n            <h1>Order {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>{' '}\r\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                    <Message variant='danger'>Not Delivered</Message>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                    <Message variant='danger'>Not Paid</Message>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Order is empty</Message>\r\n                            ) : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image\r\n                                                            src={item.image}\r\n                                                            alt={item.name}\r\n                                                            fluid\r\n                                                            rounded\r\n                                                        />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                            <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                            />\r\n                                        )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                    </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <main className='py-3'>\n          <Container>\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/login\" component={LoginScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            <Route path=\"/\" component={HomeScreen} exact />\n          </Container>\n        </main>\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}